language: java
sudo: required
before_install:
  - wget https://archive.apache.org/dist/maven/maven-3/3.5.0/binaries/apache-maven-3.5.0-bin.zip
  - unzip -qq apache-maven-3.5.0-bin.zip
  - export M2_HOME=$PWD/apache-maven-3.5.0
  - export PATH=$M2_HOME/bin:$PATH

  - wget https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz
  - tar -xzvf protobuf-2.5.0.tar.gz > tmp.log
  - pushd protobuf-2.5.0 && ./configure --prefix=/usr && make && sudo make install && popd

  - wget https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz
  - tar -xzvf go1.8.3.linux-amd64.tar.gz > tmp.log
  - export PATH=./go/bin:$PATH
  - export GOROOT=./go

  - wget https://static.rust-lang.org/dist/rust-nightly-x86_64-unknown-linux-gnu.tar.gz
  - tar -xzvf rust-nightly-x86_64-unknown-linux-gnu.tar.gz > tmp.log
  - pushd rust-nightly-x86_64-unknown-linux-gnu && ./install.sh && popd

  - wget https://github.com/Intel-bigdata/ssm-tidb/archive/release-1.0.0.tar.gz
  - tar -xzvf release-1.0.0.tar.gz > tmp.log
  - pushd ssm-tidb-release-1.0.0 && ./build_rocksdb.sh && ./build_shared_libs.sh && popd

#  - sh bin/build.sh

matrix:
  include:
    - jdk: "openjdk8"
      env: PROFILE="-Phadoop-2.7"
    - jdk: "openjdk8"
      env: PROFILE="-Phadoop-cdh-2.6"

cache:
  directories:
    - $HOME/.m2

install:
  - mvn install $PROFILE -DskipTests=true -Dmaven.javadoc.skip=true -B -V

script:
  - mvn test $PROFILE

# safelist
branches:
  only:
  - test-travis